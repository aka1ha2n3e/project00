@startuml

left to right direction



package EditorMode {
    usecase (モード変更) as modeChange
    usecase (ノーマルモード) as normalMode
    usecase (挿入モード) as insertMode
    usecase (ビジュアルモード) as visualMode
    usecase (コマンドモード) as commandMode

    modeChange <|-- normalMode
    modeChange <|-- insertMode
    modeChange <|-- visualMode
    modeChange <|-- commandMode
}

package VersionControl {
    usecase (バージョン管理) as versionControl
    usecase (コミット) as commit
    usecase (ブランチ作成) as createBranch
    usecase (マージ) as merge
    usecase (履歴表示) as showHistory
    usecase (差分表示) as showDiff
    usecase (リビジョン切り替え) as switchRevision

    versionControl <|-- commit
    versionControl <|-- createBranch
    versionControl <|-- merge
    versionControl <|-- showHistory
    versionControl <|-- showDiff
    versionControl <|-- switchRevision
}

package TextOperation{
    usecase (コピー) as copy
    usecase (切り取り) as cut
    usecase (ペースト) as paste

    usecase (yank) as yank
    usecase (undo) as undo
    usecase (redo) as redo

    usecase (置換) as replace
    usecase (検索) as search

    usecase (編集) as edit

    usecase (ナビゲーション) as navi

    edit <|-- copy
    edit <|-- cut
    edit <|-- paste
    edit <|-- yank
    edit <|-- undo
    edit <|-- redo
    edit <|-- replace
    edit <|-- search

    usecase (カーソル移動) as moveCursor
    usecase (選択) as block
    navi <|-- moveCursor
    navi <|-- block

    edit ..> modeChange : <<include>>
    navi ..> modeChange : <<include>>
    edit ..> showDiff : <<extend>>
}

package FileOperation{
    usecase (ファイル保存) as saveFile
    usecase (ファイル読み込み) as loadFile

    usecase (上書き保存) as overwriteSave
    usecase (名前を付けて保存) as saveAs

    usecase (ファイルを開く) as openFile
    usecase (新規ファイル作成) as newFile

    saveFile <|-- overwriteSave
    saveFile <|-- saveAs

    loadFile <|-- openFile
    loadFile <|-- newFile
}

package Log{
    usecase (システムログの記録) as recordSystemLog
    usecase (システムログの閲覧) as viewSystemLog

    usecase (ユーザーログの記録) as recordUserLog
    usecase (ユーザーログの閲覧) as viewUserLog
    usecase (ログの検索) as searchLog
    usecase (ログの出力) as exportLog
    usecase (ログ設定の変更) as configureLog

    usecase (操作履歴の記録) as operationHistory
    usecase (エラーの記録) as errorLog
    usecase (システム情報の記録) as infoSystemLog

    recordSystemLog <|-- operationHistory
    recordSystemLog <|-- errorLog
    recordSystemLog <|-- infoSystemLog

    viewSystemLog ..> recordSystemLog : <<include>>
    viewUserLog ..> recordUserLog : <<include>>
}

package UI {
    (HUDの表示) as HUD
    (UIの表示) as ui
    (スクロール) as scroll
    (ズーム) as zoom

    (ページング) as paging

    paging <|-- scroll
    paging <|-- zoom

    ui <|-- paging
    ui <|-- HUD
}

package TextIO {
        usecase (テキスト入力) as textInput
    usecase (テキスト出力) as textOutput
    
    usecase (キーボード入力) as keyboardInput
    usecase (ファイルからの読み込み) as fileInput
    
    usecase (画面表示) as screenOutput
    usecase (ファイルへの書き込み) as fileOutput
    
    textInput <|-- keyboardInput
    textInput <|-- fileInput
    
    textOutput <|-- screenOutput
    textOutput <|-- fileOutput
}

:user:
user --> loadFile
user --> saveFile

user --> edit
user --> navi
   
user --> viewUserLog
user --> searchLog
user --> exportLog
user --> configureLog

user --> paging

user --> versionControl

:directory:
saveFile --> directory
directory --> openFile

:data_base:
data_base <--> recordUserLog
data_base <--> recordSystemLog
data_base <--> saveFile
data_base <--> loadFile

data_base <--> versionControl

:system:
system --> recordSystemLog
system --> configureLog

system <--> ui

system <--> versionControl

:clipbord:
copy --> clipbord 
cut --> clipbord 
clipbord --> paste

@enduml